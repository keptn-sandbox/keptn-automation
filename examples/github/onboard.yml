# requires the following secrets:
# KEPTN_BASE_URL
# KEPTN_API_TOKEN
# DT_BASE_URL
# DT_API_TOKEN
# requires the following secrets:


name: Keptn Onboard Service
on:
  workflow_dispatch:

env:
  KEPTN_PROJECT: dt-orders
  KEPTN_SERVICE: frontend
  KEPTN_STAGE: staging
  KEPTN_SHIPYARD_FILE: ./keptn/shipyard.yaml
  CONFIGURE_DT_MONITORING: true
  KEPTN_SLO_FILE: ./keptn/slo.yaml
  DT_CONF_FILE: ./keptn/dynatrace.conf.yaml
  DT_SLI_FILE: ./keptn/sli.yaml
  DEBUG: true

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: dtdemos/keptn-automation:0.5.0
      env:
        KEPTN_BASE_URL: ${{ secrets.KEPTN_BASE_URL }}
        KEPTN_API_TOKEN: ${{ secrets.KEPTN_API_TOKEN }}
        DT_BASE_URL: ${{ secrets.DT_BASE_URL }}
        DT_API_TOKEN: ${{ secrets.DT_API_TOKEN }}
        DEBUG: ${{ env.DEBUG }}
        
    steps:
      # github automatically creates a volume to the checked out code
      # so we can reference them via ./foldername
      - uses: actions/checkout@v2

      - name: createdynatracesecret
        run: create-dynatrace-secret.sh

      - name: keptn onboardservice
        run: keptn.sh create project ${{ env.KEPTN_PROJECT }} --shipyard=${{ env.KEPTN_SHIPYARD_FILE }}

      - name: configure_dynatrace_monitoring_for_project
        run: keptn.sh configure monitoring dynatrace --project=${{ env.KEPTN_PROJECT }}

      - name: create_service
        run: keptn.sh create service ${{ env.KEPTN_SERVICE }} --project=${{ env.KEPTN_PROJECT }}

      - name: configure_service_with_dynatrace_query
        run: keptn.sh add-resource --project=${{ env.KEPTN_PROJECT }} --stage=${{ env.KEPTN_STAGE }} --service=${{ env.KEPTN_SERVICE }} --resource=${{ env.DT_CONF_FILE }} --resourceUri=dynatrace/dynatrace.conf.yaml